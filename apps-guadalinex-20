#!/bin/bash
clear

## variables
distribucion=$(lsb_release -cs)

#wget --no-check-certificate --content-disposition https://github.com/aosucas499/guadalinex/raw/main/apps-guadalinex-20

### Funciones del script
##		
		function installUbunturepo { 
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main universe multiverse restricted" > focal.list
		sudo mv focal.list /etc/apt/sources.list.d/
		sudo apt update
		sudo apt install git gdebi -y
		}

		function unInstallUbunturepo {
 		sudo rm /etc/apt/sources.list.d/focal.list
		sudo apt update
		}
		
		function swapKernel { 
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal-updates main universe multiverse restricted" > focal.list
		sudo mv focal.list /etc/apt/sources.list.d/
		sudo apt update
		clear
		sudo apt search linux-image*
		
		kernelnumber=$(zenity --entry \
                --title="Introduzca la versión del kernel a instalar" \
                --width=600 \
                --ok-label="Aceptar" \
                --cancel-label="Lo vamos a dejar" \
                --text="Use el formato siguiente o no funcionará: 5.10.0-1011-oem")
		ans=$?
		if [ $ans -eq 0 ]
			then
			echo "La versión introducida es: ${kernelnumber}"
			notify-send "La versión introducida es: ${kernelnumber}"
		else
    			echo "Otro día si eso..."
			sudo rm /etc/apt/sources.list.d/focal.list
			sudo apt update
    			exit
		fi
		sudo apt-get install -f -y
		sudo apt-get install linux-headers-$kernelnumber -y
		sudo apt-get install -f -y
		sudo apt-get install linux-image-$kernelnumber -y
		sudo apt-get install -f -y
		sudo apt-get install linux-modules-$kernelnumber -y
		sudo apt-get install -f -y
		sudo apt-get install linux-modules-extra-$kernelnumber -y
		sudo apt-get install -f -y
		sudo apt-get install linux-firmware -y
		sudo apt-get install -f -y
		sudo update-grub2
		sudo rm /etc/apt/sources.list.d/focal.list
		sudo apt update
		sudo apt-get autoremove -y
		}

		
		function installQshutdown {
		echo ""
		echo "Ejecute este aplicación cada vez que cree un usuario nuevo"
		echo ""
		
		#read shutdowntime
		shutdowntime=$(zenity --entry \
                --title="Introduzca la hora para el apagado automático diario del equipo" \
                --width=500 \
                --ok-label="Aceptar" \
                --cancel-label="Lo vamos a dejar" \
                --text="Use el formato siguiente o no funcionará: 14:00")
		ans=$?
		if [ $ans -eq 0 ]
			then
			echo "La hora introducida es: ${shutdowntime}"
		else
    			echo "Otro día si eso..."
    			exit
		fi
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main universe multiverse restricted" > focal.list
              	sudo mv focal.list /etc/apt/sources.list.d/
             	sudo apt update
		sudo apt install qshutdown
		sudo rm /etc/apt/sources.list.d/focal.list
		sudo apt update
		mkdir ~/.qshutdown
		cp ./qshutdown/qshutdown.conf ~/.qshutdown/
		sed -i -e "s/14:01/$shutdowntime/g" ~/.qshutdown/qshutdown.conf
		
		#Si hay un usuario = usuario lo establece también
		if [ -d "/home/usuario" ]; then
			sudo mkdir /home/usuario/.qshutdown
			sudo cp ./qshutdown/qshutdown.conf /home/usuario/.qshutdown/qshutdown.conf
			sudo sed -i -e "s/14:01/$shutdowntime/g" /home/usuario/.qshutdown/qshutdown.conf
			sudo cp /usr/share/applications/qshutdown.desktop /etc/xdg/autostart/
		else	
		sudo cp /usr/share/applications/qshutdown.desktop /etc/xdg/autostart/
		fi
		}
		
		function installDocker {
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main universe multiverse restricted" > focal.list
              	sudo mv focal.list /etc/apt/sources.list.d/
             	sudo apt update
		#clear
		sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
		sudo apt install -f
		sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
		sudo echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $distribucion stable" > docker.list
		sudo mv docker.list /etc/apt/sources.list.d/
		sudo apt-key fingerprint 0EBFCD88
		sudo apt update
		#clear
		sudo apt install docker-ce docker-ce-cli containerd.io -y
		sudo usermod -aG docker $USER
		sudo usermod -aG docker usuario
		sudo rm /etc/apt/sources.list.d/focal.list
		sudo rm /etc/apt/sources.list.d/docker.list
		sudo apt update
		sleep 30
		}					

		function installNtpfix {
		sudo cp ./ntp/fix-ntp /usr/bin
		sudo chmod +x /usr/bin/fix-ntp
		sudo chown root:root ./ntp/zz-fix-ntp
		sudo chmod 0440 ./ntp/zz-fix-ntp
		sudo cp ./ntp/zz-fix-ntp /etc/sudoers.d/ 
		sudo cp ./ntp/fix-ntp.desktop /etc/xdg/autostart/
		} 
		
		function installOpenboard {
		sudo apt update        	
		sudo apt install openboard -y
		}
		
		function installChrome {
		wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
		sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > chrome.list
		sudo mv chrome.list /etc/apt/sources.list.d/
		sudo apt update
		sudo apt install google-chrome-stable
		sudo rm /etc/apt/sources.list.d/chrome.list
		sudo apt update
		}

		function installBlinklearning {
		wget https://blinklearning1.blob.core.windows.net/installers/blinkoffline/blinkoffline.sh 
		chmod +x blinkoffline.sh
		./blinkoffline.sh
		rm ~/Escritorio/blink*
		if [ -d "/home/usuario" ]; then
			echo ""
			echo "Introduce la contraseña del usuario = usuario"
			echo ""
			echo "para instalarlo en la cuenta usuario"
			echo ""
           		su usuario -c ./blinkoffline.sh 				
			sudo rm /home/usuario/Escritorio/blin*
			sudo rm blinkoffline.sh
			else
		rm blinkoffline.sh
		fi
		}
		
		function installsm {
		wget https://downloads.smaprendizaje.com/apps/smaprendizaje/smaprendizaje_1_8_0_64.run
		chmod +x smaprendizaje_1_8_0_64.run
		./smaprendizaje_1_8_0_64.run
		sed -i -e '$a Categories=Education' /home/$USER/Escritorio/SM\ Aprendizaje.desktop
		mv /home/$USER/Escritorio/SM\ Aprendizaje.desktop /home/$USER/.local/share/applications/
		# Fix para reparar el fallo de la aplicación. Olvidaron en el acceso directo renombrar al nuevo nombre de la app.
		sudo cp /home/$USER/aprendizaje/SMAprendizaje-linux-x64/aprendizaje /home/$USER/aprendizaje/SMAprendizaje-linux-x64/SMAprendizaje
		sudo chown $USER:$USER /home/$USER/aprendizaje/SMAprendizaje-linux-x64/SMAprendizaje
		if [ -d "/home/usuario" ]; then
			echo ""
			echo "Introduce la contraseña del usuario = usuario"
			echo ""
			echo "para instalarlo en la cuenta usuario"
			echo ""
           		su usuario -c ./smaprendizaje_1_8_0_64.run 				
			sudo sed -i -e '$a Categories=Education' /home/usuario/Escritorio/SM\ Aprendizaje.desktop
			sudo chown usuario:usuario /home/usuario/Escritorio/SM\ Aprendizaje.desktop
			sudo mv /home/usuario/Escritorio/SM\ Aprendizaje.desktop /home/usuario/.local/share/applications/
			# Fix para reparar el fallo de la aplicación. Olvidaron en el acceso directo renombrar al nuevo nombre de la app.
			sudo cp /home/usuario/aprendizaje/SMAprendizaje-linux-x64/aprendizaje /home/usuario/aprendizaje/SMAprendizaje-linux-x64/SMAprendizaje
			sudo chown usuario:usuario /home/usuario/aprendizaje/SMAprendizaje-linux-x64/SMAprendizaje
			sudo rm smaprendizaje_1_8_0_64.run
			else
		rm smaprendizaje_1_8_0_64.run
		fi
		}
		
		function installsantillana {
		wget https://prod.santillana.com/downloads/av/linux.tar.gz
		tar -xzvf linux.tar.gz
		chmod +x aulavirtual-3.3.4-linux-x64-installer.run
		./aulavirtual-3.3.4-linux-x64-installer.run
		sed -i -e '$a Categories=Education' /home/$USER/Escritorio/Aula\ Virtual.desktop
		mv /home/$USER/Escritorio/Aula\ Virtual.desktop /home/$USER/.local/share/applications/
		if [ -d "/home/usuario" ]; then
			echo ""
			echo "Introduce la contraseña del usuario = usuario"
			echo ""
			echo "para instalarlo en la cuenta usuario"
			echo ""
           		su usuario -c ./aulavirtual-3.3.4-linux-x64-installer.run				
			sudo chown $USER:$USER /home/usuario/Escritorio/Aula\ Virtual.desktop
			sudo sed -i -e '$a Categories=Education' /home/usuario/Escritorio/Aula\ Virtual.desktop
			sudo chown usuario:usuario /home/usuario/Escritorio/Aula\ Virtual.desktop
			sudo mv /home/usuario/Escritorio/Aula\ Virtual.desktop /home/usuario/.local/share/applications/
			sudo rm aulavirtual-3.3.4-linux-x64-installer.run
			sudo rm linux.tar.gz
			else
		rm aulavirtual-3.3.4-linux-x64-installer.run
		rm linux.tar.gz
		fi
		}
		
		function installActivdre {
		git clone https://github.com/aosucas499/activdre.git
		cd activdre
		chmod +x educaandos.sh
		./educaandos.sh
		cd ..
		}
		
		function installSmartdre {
		git clone https://github.com/aosucas499/smartdre.git
		cd smartdre
		chmod +x install-smartdre
		./install-smartdre
		cd ..
		}
		
		function installSigala {
		cd /home/$USER/
		git clone https://github.com/aosucas499/hgr-dre.git
		cd hgr-dre
		chmod +x install-hgr-dre
		./install-hgr-dre
		sudo mv /etc/xdg/autostart/hgr.desktop /etc/xdg/autostart/hgr.desktop-backup
		sudo mv /usr/share/applications/hgr.desktop /usr/share/applications/hgr.desktop-backup
		#Si hay un usuario = usuario lo establece también
		if [ -d "/home/usuario" ]; then
			cd /home/$USER/
			sudo cp -r hgr-dre /home/usuario/
			sudo chown -R usuario:usuario /home/usuario/hgr-dre
			sudo usermod -aG docker usuario
		else	
		cd /home/$USER/
		
		fi
		}
		
		function usuario {
		echo ""
		echo "Esta opción no debe combinarse con otras hasta que"
		echo "entre en la sesión del nuevo usuario gráficamente"
		echo ""
		echo "Otras aplicaciones necesitan instalar en carpetas"
		echo "que aún no han sido creadas hasta que entre en la sesión gráfica"
		echo ""
		echo "Despúes de crear el usuario, ejecute esta app otra vez"
		echo "e instale lo que necesite que pueda involucrar a ambos usuarios"
		echo ""
		echo ""
		echo "Ingrese el nombre del nuevo usuario sin permisos root"
		echo ""
		read usuario
		if [ "$usuario" == "" ] ; then
  			echo -e "\n"
  			echo "El nombre no puede estar vacío, ejecute el script otra vez."
  			echo -e "\n"
  			exit 1
  			fi
  		if [ "$?" != 0 ] ; then
   			echo -e "\n"
  			echo "Ha ocurrido un error, asegurese de que los datos ingresados son correctos."
  			exit 1
			fi
		echo -e "\n"
		sudo useradd -m -d /home/$usuario -G adm,cdrom,dip,plugdev,lpadmin,sambashare $usuario -s /bin/bash
		echo "Ingrese una contraseña para el usuario, $usuario"
		sudo passwd $usuario
		echo -e "\n"echo "El usuario fue creado satisfactoriamente"
		}

		function installkazam {
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main universe multiverse restricted" > focal.list
              	sudo mv focal.list /etc/apt/sources.list.d/
             	sudo apt update
		sudo apt install kazam
		sudo sed -i 's/time.clock/time.perf_counter/g' /usr/lib/python3/dist-packages/kazam/pulseaudio/pulseaudio.py
		sudo rm /etc/apt/sources.list.d/focal.list
		sudo apt update
		}	
		
		function installgparted {
		sudo echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main universe multiverse restricted" > focal.list
              	sudo mv focal.list /etc/apt/sources.list.d/
             	sudo apt update
		sudo apt install gparted
		sudo rm /etc/apt/sources.list.d/focal.list
		sudo apt update
		}	
		
		function restore_usuario {
		echo ""
		echo "Esta opción no debe combinarse con otras hasta que"
		echo "entre en la sesión del usuario restaurado gráficamente"
		echo ""
		echo "Otras aplicaciones necesitan instalar en carpetas"
		echo "que aún no han sido creadas hasta que entre en la sesión gráfica"
		echo ""
		echo "Despúes de restablecer el usuario, ejecute esta app otra vez"
		echo "e instale los nuevos programas que necesite que pueda involucrar a ambos usuarios"
		echo ""
		echo ""
		echo "Ingrese el nombre del usuario que quiere restablecer a valores de fábrica"
		echo ""
		read usuario
		if [ "$usuario" == "" ] ; then
  			echo -e "\n"
  			echo "El nombre no puede estar vacío, ejecute el script otra vez."
  			echo -e "\n"
  			exit 1
  			fi
  		if [ "$?" != 0 ] ; then
   			echo -e "\n"
  			echo "Ha ocurrido un error, asegurese de que los datos ingresados son correctos."
  			exit 1
			fi
		echo -e "\n"
		sudo userdel -r $usuario
		sudo useradd -m -d /home/$usuario -G adm,cdrom,dip,plugdev,lpadmin,sambashare $usuario -s /bin/bash
		echo "Ingrese una contraseña para el usuario, $usuario"
		sudo passwd $usuario
		echo -e "\n"echo "El usuario fue creado satisfactoriamente"
		}
		
		
# Ejecuta la función correspondiente a cada una de las opciones del script
# ---

function ejecutarAccionOpcional {

    echo "Ejecutamos $1()"
    ($1)
}


# Invocamos ("callback") las funciones asociadas a las opciones 
# seleccionadas por el usuario


		function procesarAccionesOpcionales {

    		# Dividimos (el separador es "|" ) las opciones seleccionadas por el usuario
   
		IFS="|" read -a vals <<< $1

	    	# Solicitamos (una a una) que se procesen dichas opciones

    		for i in "${vals[@]}"
    		do
        	ejecutarAccionOpcional $i
    		done
		}

# ----------------------------------------------------------------------------
# Cuerpo del script
# ----------------------------------------------------------------------------

# Realizamos las opciones por defecto de nuestro script

# Permitimos seleccionar opciones personalizadas

# Mostramos las opciones personalizables

opc=$( \
    zenity \
        --list \
        --title="Elija las personalizaciones que desea aplicar" \
        --checklist \
        --column="Aplicar" \
        --column="funcionAEjecutar" \
        --column="Descripción" \
        --hide-column=2 \
        --width=625 \
        --height=650 \
    False usuario "Crear usuario sin derechos admin. No combine esta opción con otras." \
    False restore_usuario "Restablece un usuario a valores originales. No combine esta opción con otras." \
    False installQshutdown "Instalar Apagado automático a las XX:XX horas de L-V (app qshutdown)" \
    False installNtpfix "Instalar corrección de hora en equipos conectados por wifi" \
    False installOpenboard "Instalar aplicación de pizarra Openboard" \
    False installActivdre "Instalar drivers pizarras Promethean y aplicación ActivInspire" \
    False installSmartdre "Instalar drivers pizarras Smartboard-incluida SB480" \
    False installSigala "Instalar aplicación HGR-Sigala Server" \
    False installChrome "Instalar navegador Chrome" \
    False installsm "Instalar aplicación Editorial SM - Aprendizaje" \
    False installsantillana "Instalar aplicación Santillana Aula Virtual" \
    False installBlinklearning "Instalar aplicación Blinklearning - Usado en libros de Oxford" \
    False installkazam "Instalar grabador de escritorio Kazam" \
    False installgparted "Instalar Gparted, manejador de disco/particiones" \
    False installUbunturepo "Instalar repositorios Ubuntu 20 Focal" \
    False unInstallUbunturepo "Desinstalar repositorios Ubuntu 20 Focal" \
    False installDocker "Instalar Docker" \
    False swapKernel "Actualizar kernel del sistema" \
)

# Comprobamos que no se pulse el botón Cancelar

	if [[ "$?" != 0 ]]; then
    	echo "Sin problemas, ya personalizaremos otro día ;)"
    	exit 0
	fi

# Procesamos las opciones elegidas por el usuario
# ---

	procesarAccionesOpcionales $opc

#
